% In this method, I don't use FFT any more. Instead, I use Auto Correlation to get samples from every two steps.
clear;
sample_rate = 199;
txtFiles = dir('*.txt');
numfiles = length(txtFiles);
if numfiles ~= 25
	error('There are %d files. Error! You must have 25 files!', numfiles);	
else
	disp('There are 25 files. Correct!');
	accZ3_1 = importOneData(txtFiles(1).name, sample_rate);
	accZ5_7 = importOneData(txtFiles(2).name, sample_rate);
	accZ3_3 = importOneData(txtFiles(3).name, sample_rate);
	accZ5_9 = importOneData(txtFiles(4).name, sample_rate);
	accZ3_5 = importOneData(txtFiles(5).name, sample_rate);
	accZ6_1 = importOneData(txtFiles(6).name, sample_rate);
	accZ3_7 = importOneData(txtFiles(7).name, sample_rate);
	accZ6_3 = importOneData(txtFiles(8).name, sample_rate);
	accZ3_9 = importOneData(txtFiles(9).name, sample_rate);
	accZ6_5 = importOneData(txtFiles(10).name, sample_rate);
	accZ4_1 = importOneData(txtFiles(11).name, sample_rate);
	accZ6_7 = importOneData(txtFiles(12).name, sample_rate);
	accZ4_3 = importOneData(txtFiles(13).name, sample_rate);
	accZ6_9 = importOneData(txtFiles(14).name, sample_rate);
	accZ4_5 = importOneData(txtFiles(15).name, sample_rate);
	accZ7_1 = importOneData(txtFiles(16).name, sample_rate);
	accZ4_7 = importOneData(txtFiles(17).name, sample_rate);
	accZ7_3 = importOneData(txtFiles(18).name, sample_rate);
	accZ4_9 = importOneData(txtFiles(19).name, sample_rate);
	accZ7_5 = importOneData(txtFiles(20).name, sample_rate);
	accZ5_1 = importOneData(txtFiles(21).name, sample_rate);
	accZ7_7 = importOneData(txtFiles(22).name, sample_rate);
	accZ5_3 = importOneData(txtFiles(23).name, sample_rate);
	accZ7_9 = importOneData(txtFiles(24).name, sample_rate);
	accZ5_5 = importOneData(txtFiles(25).name, sample_rate);

	[RZ3_1, RRZ3_1, RRRZ3_1, LocZ3_1, LocLocZ3_1, LocLocLocZ3_1] = getInstantSampleAfterCorrelation(accZ3_1, 3.1);
	[RZ3_3, RRZ3_3, RRRZ3_3, LocZ3_3, LocLocZ3_3, LocLocLocZ3_3] = getInstantSampleAfterCorrelation(accZ3_3, 3.3);
	[RZ3_5, RRZ3_5, RRRZ3_5, LocZ3_5, LocLocZ3_5, LocLocLocZ3_5] = getInstantSampleAfterCorrelation(accZ3_5, 3.5);
	[RZ3_7, RRZ3_7, RRRZ3_7, LocZ3_7, LocLocZ3_7, LocLocLocZ3_7] = getInstantSampleAfterCorrelation(accZ3_7, 3.7);
	[RZ3_9, RRZ3_9, RRRZ3_9, LocZ3_9, LocLocZ3_9, LocLocLocZ3_9] = getInstantSampleAfterCorrelation(accZ3_9, 3.9);
	[RZ4_1, RRZ4_1, RRRZ4_1, LocZ4_1, LocLocZ4_1, LocLocLocZ4_1] = getInstantSampleAfterCorrelation(accZ4_1, 4.1);
	[RZ4_3, RRZ4_3, RRRZ4_3, LocZ4_3, LocLocZ4_3, LocLocLocZ4_3] = getInstantSampleAfterCorrelation(accZ4_3, 4.3);
	[RZ4_5, RRZ4_5, RRRZ4_5, LocZ4_5, LocLocZ4_5, LocLocLocZ4_5] = getInstantSampleAfterCorrelation(accZ4_5, 4.5);
	[RZ4_7, RRZ4_7, RRRZ4_7, LocZ4_7, LocLocZ4_7, LocLocLocZ4_7] = getInstantSampleAfterCorrelation(accZ4_7, 4.7);
	[RZ4_9, RRZ4_9, RRRZ4_9, LocZ4_9, LocLocZ4_9, LocLocLocZ4_9] = getInstantSampleAfterCorrelation(accZ4_9, 4.9);
	[RZ5_1, RRZ5_1, RRRZ5_1, LocZ5_1, LocLocZ5_1, LocLocLocZ5_1] = getInstantSampleAfterCorrelation(accZ5_1, 5.1);
	[RZ5_3, RRZ5_3, RRRZ5_3, LocZ5_3, LocLocZ5_3, LocLocLocZ5_3] = getInstantSampleAfterCorrelation(accZ5_3, 5.3);
	[RZ5_5, RRZ5_5, RRRZ5_5, LocZ5_5, LocLocZ5_5, LocLocLocZ5_5] = getInstantSampleAfterCorrelation(accZ5_5, 5.5);
	[RZ5_7, RRZ5_7, RRRZ5_7, LocZ5_7, LocLocZ5_7, LocLocLocZ5_7] = getInstantSampleAfterCorrelation(accZ5_7, 5.7);
	[RZ5_9, RRZ5_9, RRRZ5_9, LocZ5_9, LocLocZ5_9, LocLocLocZ5_9] = getInstantSampleAfterCorrelation(accZ5_9, 5.9);
	[RZ6_1, RRZ6_1, RRRZ6_1, LocZ6_1, LocLocZ6_1, LocLocLocZ6_1] = getInstantSampleAfterCorrelation(accZ6_1, 6.1);
	[RZ6_3, RRZ6_3, RRRZ6_3, LocZ6_3, LocLocZ6_3, LocLocLocZ6_3] = getInstantSampleAfterCorrelation(accZ6_3, 6.3);
	[RZ6_5, RRZ6_5, RRRZ6_5, LocZ6_5, LocLocZ6_5, LocLocLocZ6_5] = getInstantSampleAfterCorrelation(accZ6_5, 6.5);
	[RZ6_7, RRZ6_7, RRRZ6_7, LocZ6_7, LocLocZ6_7, LocLocLocZ6_7] = getInstantSampleAfterCorrelation(accZ6_7, 6.7);
	[RZ6_9, RRZ6_9, RRRZ6_9, LocZ6_9, LocLocZ6_9, LocLocLocZ6_9] = getInstantSampleAfterCorrelation(accZ6_9, 6.9);
	[RZ7_1, RRZ7_1, RRRZ7_1, LocZ7_1, LocLocZ7_1, LocLocLocZ7_1] = getInstantSampleAfterCorrelation(accZ7_1, 7.1);
	[RZ7_3, RRZ7_3, RRRZ7_3, LocZ7_3, LocLocZ7_3, LocLocLocZ7_3] = getInstantSampleAfterCorrelation(accZ7_3, 7.3);
	[RZ7_5, RRZ7_5, RRRZ7_5, LocZ7_5, LocLocZ7_5, LocLocLocZ7_5] = getInstantSampleAfterCorrelation(accZ7_5, 7.5);
	[RZ7_7, RRZ7_7, RRRZ7_7, LocZ7_7, LocLocZ7_7, LocLocLocZ7_7] = getInstantSampleAfterCorrelation(accZ7_7, 7.7);
	[RZ7_9, RRZ7_9, RRRZ7_9, LocZ7_9, LocLocZ7_9, LocLocLocZ7_9] = getInstantSampleAfterCorrelation(accZ7_9, 7.9);

	FZ3_1 = getSampleSetVF(LocLocLocZ3_1, sample_rate);
	FZ3_3 = getSampleSetVF(LocLocLocZ3_3, sample_rate);
	FZ3_5 = getSampleSetVF(LocLocLocZ3_5, sample_rate);
	FZ3_7 = getSampleSetVF(LocLocLocZ3_7, sample_rate);
	FZ3_9 = getSampleSetVF(LocLocLocZ3_9, sample_rate);
	FZ4_1 = getSampleSetVF(LocLocLocZ4_1, sample_rate);
	FZ4_3 = getSampleSetVF(LocLocLocZ4_3, sample_rate);
	FZ4_5 = getSampleSetVF(LocLocLocZ4_5, sample_rate);
	FZ4_7 = getSampleSetVF(LocLocLocZ4_7, sample_rate);
	FZ4_9 = getSampleSetVF(LocLocLocZ4_9, sample_rate);
	FZ5_1 = getSampleSetVF(LocLocLocZ5_1, sample_rate);
	FZ5_3 = getSampleSetVF(LocLocLocZ5_3, sample_rate);
	FZ5_5 = getSampleSetVF(LocLocLocZ5_5, sample_rate);
	FZ5_7 = getSampleSetVF(LocLocLocZ5_7, sample_rate);
	FZ5_9 = getSampleSetVF(LocLocLocZ5_9, sample_rate);
	FZ6_1 = getSampleSetVF(LocLocLocZ6_1, sample_rate);
	FZ6_3 = getSampleSetVF(LocLocLocZ6_3, sample_rate);
	FZ6_5 = getSampleSetVF(LocLocLocZ6_5, sample_rate);
	FZ6_7 = getSampleSetVF(LocLocLocZ6_7, sample_rate);
	FZ6_9 = getSampleSetVF(LocLocLocZ6_9, sample_rate);
	FZ7_1 = getSampleSetVF(LocLocLocZ7_1, sample_rate);
	FZ7_3 = getSampleSetVF(LocLocLocZ7_3, sample_rate);
	FZ7_5 = getSampleSetVF(LocLocLocZ7_5, sample_rate);
	FZ7_7 = getSampleSetVF(LocLocLocZ7_7, sample_rate);
	FZ7_9 = getSampleSetVF(LocLocLocZ7_9, sample_rate);

	FV = [FZ3_1 ones(size(FZ3_1,1),1)*3.1];
	FV = [FV; FZ3_3 ones(size(FZ3_3,1),1)*3.3];
	FV = [FV; FZ3_5 ones(size(FZ3_5,1),1)*3.5];
	FV = [FV; FZ3_7 ones(size(FZ3_7,1),1)*3.7];
	FV = [FV; FZ3_9 ones(size(FZ3_9,1),1)*3.9];
	FV = [FV; FZ4_1 ones(size(FZ4_1,1),1)*4.1];
	FV = [FV; FZ4_3 ones(size(FZ4_3,1),1)*4.3];
	FV = [FV; FZ4_5 ones(size(FZ4_5,1),1)*4.5];
	FV = [FV; FZ4_7 ones(size(FZ4_7,1),1)*4.7];
	FV = [FV; FZ4_9 ones(size(FZ4_9,1),1)*4.9];
	FV = [FV; FZ5_1 ones(size(FZ5_1,1),1)*5.1];
	FV = [FV; FZ5_3 ones(size(FZ5_3,1),1)*5.3];
	FV = [FV; FZ5_5 ones(size(FZ5_5,1),1)*5.5];
	FV = [FV; FZ5_7 ones(size(FZ5_7,1),1)*5.7];
	FV = [FV; FZ5_9 ones(size(FZ5_9,1),1)*5.9];
	FV = [FV; FZ6_1 ones(size(FZ6_1,1),1)*6.1];
	FV = [FV; FZ6_3 ones(size(FZ6_3,1),1)*6.3];
	FV = [FV; FZ6_5 ones(size(FZ6_5,1),1)*6.5];
	FV = [FV; FZ6_7 ones(size(FZ6_7,1),1)*6.7];
	FV = [FV; FZ6_9 ones(size(FZ6_9,1),1)*6.9];
	FV = [FV; FZ7_1 ones(size(FZ7_1,1),1)*7.1];
	FV = [FV; FZ7_3 ones(size(FZ7_3,1),1)*7.3];
	FV = [FV; FZ7_5 ones(size(FZ7_5,1),1)*7.5];
	FV = [FV; FZ7_7 ones(size(FZ7_7,1),1)*7.7];
	FV = [FV; FZ7_9 ones(size(FZ7_9,1),1)*7.9];

	figure;
	plot(FV(:,1), FV(:,2), '.');
end
